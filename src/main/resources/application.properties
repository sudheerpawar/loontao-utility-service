spring.application.name=utilityservice-prod

# secured https configuration
# keytool -genkeypair -alias loontao -keyalg RSA -keysize 2048 -storetype PKCS12 -keystore loontao.p12 -validity 365 -storepass loontao -keypass loontao -dname "CN=sudheer, OU=unknown, O=unknown, L=unknown, ST=unknown, C=unknown"
# keytool -list -v -keystore loontao.p12
# server.ssl.enabled=true
# server.ssl.key-store=classpath:loontao.p12
# server.ssl.key-store-password=loontao
# server.ssl.key-store-type=PKCS12
# server.port=8443


server.port=${PORT:8082}

# JWT Configuration
# cmd to generate key: openssl rand -base64 32
# security.jwt.secret=0v9/lNNOccxyOS1VUawdtTos2WUcPa3vxXcwyRMKayo=
security.jwt.secret-key=j0ljIo4zrxsx//VGMA8sRp5gccn40KDh4S7O9DdGx+8=
security.jwt.expiration-time=${JWT_EXPIRATION_TIME:3600000}


# Database connection settings
spring.datasource.url=jdbc:postgresql://${POSTGRES_HOST:loontao.cns2umyugtks.eu-north-1.rds.amazonaws.com}:${POSTGRES_PORT:5432}/${POSTGRES_DB:loon_tao}
spring.datasource.username=${POSTGRES_USER:postgres}
spring.datasource.password=${POSTGRES_PASSWORD:loontao123}
spring.datasource.driver-class-name=org.postgresql.Driver


# Hibernate settings
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# For creating tables automatically
spring.jpa.hibernate.ddl-auto=${DDL_AUTO:update}
# For showing sql queries in console
spring.jpa.show-sql=${SHOW_SQL:true}

# Logging
logging.level.org.springframework.security=DEBUG

# Actuator config
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always
